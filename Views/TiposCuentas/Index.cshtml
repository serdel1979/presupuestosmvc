@model IEnumerable<TipoCuenta>

@{
    ViewData["Title"] = "Tipos de Cuenta";
}

<div class="card">
    <div class="card-header">
        Listado de tipos de cuenta
    </div>

    <div class="row">
        <div class="col-2">
            <div style="padding:20px;">
                <a asp-action="Crear" class="btn btn-primary mb-3">Nuevo</a>
            </div>
        </div>
    </div>
    

    <div class="card-body">
        <table class="table">
            <thead>
                <tr>
                    <th scope="col">Tipo</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody id="reordenable">

                @foreach (var tipoCuenta in Model)
                {
                    <tr>
                        <td>@tipoCuenta.Nombre</td>
                        <td>
                            <input type="hidden" value="@tipoCuenta.Id" class="ids" />
                            <a asp-action="Editar" asp-route-id="@tipoCuenta.Id" class="btn btn-warning">Editar</a>
                            <a asp-action="Eliminar" asp-route-id="@tipoCuenta.Id" class="btn btn-danger">Borrar</a>
                        </td>
                    </tr>
                }

            </tbody>
        </table>
    </div>
</div>


                @section scripts{
                    <script>

                        const urlOrdenar = '@Url.Action("ordenar")';

                        $(function(){
                            $("#reordenable").sortable({
                                stop: async function(e,ui){
                                    await actualizarOrdenes();
                                }
                            });

                            async function actualizarOrdenes(){
                                const ids = await obtenerIdsEelementos();
                                await sendToBack(ids);
                            }

                            function obtenerIdsEelementos(){
                                const ids = $(".ids").map(function(){
                                   return $(this).val();
                                }).get();
                                return ids;
                            }

                            async function sendToBack(ids){
                                var data = JSON.stringify(ids);
                                await fetch(urlOrdenar,{
                                    method:'POST',
                                    body: data,
                                    headers: {
                                        'Content-Type':'application/json'
                                    }
                                });
                            }
                            
                        })
                    </script>
                }